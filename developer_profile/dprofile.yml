---
- hosts: localhost
  vars:
    username: $USER
  become: true
  tasks:
    - name: Update and Upgrade system
      apt:
        upgrade: yes
        update_cache: yes
      tags: ['apt','odoo10','odoo11','odoo12']

    - name: Install lxd and lxc-utils
      apt:
        name: ['lxd','lxc-utils','lxd-tools']
        state: present
      when: ansible_os_family == 'Debian'
      tags: ['lxd','lxc','never']

    - name: Install Git
      apt:
        name: git
        state: present
      when: ansible_os_family == 'Debian'
      tags: ['git']

    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: true
      when: ansible_os_family == 'Debian'
      tags: ['docker','odoo10','odoo11','odoo12']

    - name: Install python-docker module
      apt:
        name: python-docker
      when: ansible_os_family == 'Debian'
      tags: ['docker','odoo10','odoo11','odoo12']


    - name: Postgre Environment For Docker
      copy:
        src: postgres_env.tpl
        dest: "/tmp/"
      tags: ['postgres','odoo10','odoo11','odoo12']

    - name: Create Postgres:10 Container
      docker_container:
        name: db10
        image: postgres:10
        state: started
        privileged: true
        env_file: /tmp/postgres_env.tpl
      tags: ['postgres','odoo10','odoo11','odoo12']

    - name: Create Odoo Mount Volumes ($HOME/odooxxx)
      file:
        path: /home/$USER/odoo10-addons
        state: directory
      file:
        path: /home/$USER/odoo11-addons
        state: directory
      file:
        path: /home/$USER/odoo11-addons
        state: directory

      tags: ['odoo','odoo10','odoo11','odoo12']

    - name: Create Odoo10 Container
      docker_container:
        # env_file: postgres_env.tpl
        name: odoo10
        image: odoo:10
        privileged: true
        state: started
        links:
          - db10:db
        ports:
          - 8080:8069
        volumes:
          - $HOME/:/host/proc:ro
      tags: ['odoo10']

    - name: install openssh-server
      apt:
        name: openssh-server
        state: present
      tags: ['openssh']

    - name: Create Odoo11 Container
      docker_container:
        # env_file: postgres_env.tpl
        name: odoo11
        image: odoo:11
        state: started
        privileged: true
        links:
          - db10:db
        ports:
          - 8081:8069
      tags: ['odoo11']

    - name: Create Odoo12 Container
      docker_container:
        # env_file: postgres_env.tpl
        name: odoo12
        state: started
        image: odoo:12
        privileged: true
        links:
          - db10:db
        ports:
          - 8082:8069
      tags: ['odoo12']

    - name: Create Pgadmin4 Container
      docker_container:
        # env_file: postgres_env.tpl
        name: pgadmin
        state: started
        image: dpage/pgadmin4
        env: {'PGADMIN_DEFAULT_EMAIL':'user@gmail.com','PGADMIN_DEFAULT_PASSWORD':'password'}
        privileged: true
        ports:
          - 8090:80
      tags: ['pgadmin']

    - name: Netdata Container
      docker_container:
        # env_file: postgres_env.tpl
        name: netdata
        image: netdata/netdata
        state: started
        privileged: true
        ports:
          - 19999:19999
        volumes:
          - /proc:/host/proc:ro
          - /sys:/host/sys:ro
          - /var/run/docker.sock:/var/run/docker.sock:ro
      tags: ['netdata']

    - name: Install atom-text
      command: snap install atom --classic
      tags: ['atom','never']

    - name: Install atom-text
      command: snap install atom --classic
      tags: ['atom']

    - name: Install brackets
      command: snap install brackets --classic
      tags: ['brackets','never']

    - name: Install pycharm-community
      command: snap install pycharm-community --classic
      tags: ['pycharm','never']

    - name: Install Geany IDE
      apt:
        name: geany
        state: present
      tags: ['geany','never']

    - name: install Dia
      apt:
        name: ['dia']
        state: present
      tags: ['dia']

    - name: Create Jenkins HOME dir
      file:
        path: /home/$USER/jenkins_home
        state: directory
      tags: ['jenkins']

    - name: Jenkins Container
      docker_container:
        # env_file: postgres_env.tpl
        name: jenkins
        image: jenkins/jenkins:lts
        state: started
        privileged: true
        ports:
          - 8060:8080
          - 50000:50000
        volumes:
          - /home/$USER/jenkins_home:/var/jenkins_home
      tags: ['jenkins']

    - name: Download ISP Config
      get_url:
        url: https://ispconfig.org/downloads/ISPConfig-3.1.13.tar.gz
        dest: /tmp/ISPConfig-3.1.13.tar.gz
        mode: 0440
      tags: ['ispconfig','never']
